# i3 bindings

super + {j, k, h, l}
	i3-cycle {'down', 'up', 'left', 'right'}

super + o
    i3-msg focus mode_toggle

super + shift + {j, k, l, h}
	i3-msg move {down, up, right, left}

super + {s, g}
	i3-msg {'resize shrink width 10 px or 10 ppt', 'resize grow width 10 px or 10 ppt'}

super + shift + {s, g}
	i3-msg {'resize shrink height 10 px or 10 ppt', 'resize grow height 10 px or 10 ppt'}

super + f
	i3-msg 'fullscreen toggle'

super + v
    i3-msg 'layout splitv'

super + shift + v
    i3-msg 'layout splith'

super + shift + f
	i3-msg 'floating toggle'

super + shift + i
	i3-msg 'sticky toggle'

super + shift + r
	i3-msg restart

super + q
	i3-msg 'kill'

super + shift + q
    $HOME/.scripts/logout.sh

super + shift + Return
    $HOME/.scripts/promote-window.sh

super + p
    i3-msg scratchpad show

super + shift + p
    i3-msg move scratchpad 

alt + n
    i3-msg focus output next

super + n
    i3-msg workspace next_on_output

super + shift + n
    i3-msg move container to output next; i3-msg workspace back_and_forth

super + shift + w
    i3-msg move workspace to output next; i3-msg focus output next

super + Tab
    i3-msg 'workspace back_and_forth'

super + u
    $HOME/.scripts/i3launcher.sh Office

super + Return
	alacritty

super + d
	dmenu_run

super + w
    $HOME/.scripts/i3launcher.sh Firefox

super + r
	$HOME/.scripts/i3launcher.sh Lf

super + t
    $HOME/.scripts/i3launcher.sh Telegram	

super + i
	$HOME/.scripts/i3launcher.sh Discord

super + y
    $HOME/.scripts/i3launcher.sh Spotify

super + shift + t
	$HOME/.scripts/touchpad_toggle.sh

super + grave
	$HOME/.scripts/i3workspaces.sh

super + shift + b
    polybar-msg cmd toggle 

super + ctrl + g
    i3toggle_gaps

# control
super + x
    $HOME/.scripts/lock.sh

super + shift + x
	$HOME/.scripts/exit.sh

super + {equal, minus, BackSpace}
	$HOME/.scripts/volume.sh     {up, down, toggle}

super + shift + {equal, minus, BackSpace}
	$HOME/.scripts/mic.sh        {up, down, toggle}

super + ctrl + {equal, minus}
	$HOME/.scripts/brightness.sh {up, down}

# print screen
# print screen and save to clipboard
Print
	maim -g $(getgeometry) -u | xclip -selection clipboard -t image/png
# print screen and save to disk and clipboard
ctrl + Print
	maim -g $(getgeometry) -u | tee ~/Pictures/$(date +%s).png | xclip -selection clipboard -t image/png

# select portion and save to clipboard
super + Print
	maim -su |  xclip -selection clipboard -t image/png
# select portion and save to disk and clipboard
super + ctrl + Print
	maim -su | tee ~/Pictures/$(date +%s).png | xclip -selection clipboard -t image/png

# Reload sxhkd
super + ctrl + r
	kill -USR1 $(pgrep sxhkd)

# Record screen
super + c
	$HOME/.scripts/record.sh

super + shift + c
	kill -SIGTERM $(pgrep ffmpeg)

# Show time
super + e
    rofi -modi emoji -show emoji
